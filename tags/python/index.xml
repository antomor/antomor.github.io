<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Antomor</title>
    <link>https://antomor.com/tags/python/</link>
    <description>Recent content in python on Antomor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 25 Oct 2020 16:27:12 +0100</lastBuildDate><atom:link href="https://antomor.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Iterators &amp; Generators in Python</title>
      <link>https://antomor.com/blog/python-iterators-generators/</link>
      <pubDate>Sun, 25 Oct 2020 16:27:12 +0100</pubDate>
      
      <guid>https://antomor.com/blog/python-iterators-generators/</guid>
      <description>This post aims to describe the basic mechanisms behind iterators and generators.
Iterator protocol As in many programming languages, Python allows to iterate over a collection. The iteration mechanism is often useful when we need to scan a sequence, operation that is very common in programming. In Python the iterator protocol involves two components: an iterable and an iterator.
Iterable The iterable is the container through which we want to iterate.</description>
    </item>
    
  </channel>
</rss>
